{"_path":"/page2","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Mobile App Development with Flutter","description":"First part of a multi-parted blog post about Dart language and Flutter framework. In this part, we'll talk about Flutter and Dart basics.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Recently, I was working on web development. I build sites with pure PHP, Python and Django, pure JavaScript, Vue and Nuxt and PHP with Laravel. There are some points I didn't touch for now; like Angular and React or Express and Node. However, I hope to do so in the future. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After all of this, I thought moving into mobile development might be a reasonable move because the two are so closely related. As a starting point, I chose Flutter. Before Flutter, I wrote some basic Android applications in Java. I could dive into Java, but I was curious about Dart, so I began my Flutter journey."}]},{"type":"element","tag":"h2","props":{"id":"first-step-learn-to-play-the-game"},"children":[{"type":"text","value":"First Step: Learn to play the game"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Like every subject, the first thing you want to do is learn the basics. I started to research Dart and Flutter first and tried to find some helpful resources to learn the language and framework. The most comprehensive resource I could find was called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Flutter Complete Reference"}]},{"type":"text","value":" by "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Alberto Miola"}]},{"type":"text","value":" ("},{"type":"element","tag":"a","props":{"href":"https://fluttercompletereference.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Here"}]},{"type":"text","value":" is the link to the site). The book does not only teach you Dart or Flutter, it also mentions the basics of both of them. Also, the writer talks about good practices for writing efficient and clean Dart and Flutter code. In this way you have a vision of how and when to use the given topic in a real situation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now I want to talk about some Dart basics. First, Dart is a very mature language. I worked with lots of languages and I can tell that Dart is not too difficult to learn. It is readable and easy to understand. It is also backed by a large community. When you face an obstacle, there is always help nearby. And it has a very large "},{"type":"element","tag":"a","props":{"href":"https://pub.dev/","rel":["nofollow"]},"children":[{"type":"text","value":"package library"}]},{"type":"text","value":" that you could use. For example I found out a web framework called "},{"type":"element","tag":"a","props":{"href":"https://www.theconduit.dev/","rel":["nofollow"]},"children":[{"type":"text","value":"Conduct"}]},{"type":"text","value":" that I want to try out instead of Python's Flask to develop some web applications."}]},{"type":"element","tag":"h3","props":{"id":"darts-basics"},"children":[{"type":"text","value":"Darts Basics"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dart is developed and maintained by Google. It is intended to replace JavaScript. Therefore, some weaknesses of JavaScript have been eliminated in Dart."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dart is strongly typed like TypeScript, unlike JavaScript. JavaScript's weakly typed feature is both a strength and a weakness at the same time. It is a strength because you don’t have to cast or convert types, however it could cause severe runtime troubles. The Dart team developed the language as strongly typed to prevent developers from running into runtime problems."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As like most other languages Dart has Numbers (integers and double precision floating points), Strings, Booleans, Lists (dynamic arrays), Sets and Maps (Associative array or dictionary)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are several ways to define a variable. As in JavaScript, you can define variables with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" keyword. As in most other strongly typed languages, you can declare a variable by putting "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"<type>"}]},{"type":"text","value":" before the variable name. Moreover you can declare a variable with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"final"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" keywords. Both of these keywords define an unchangeable variable, but in const you should initialize the variable value while declaring it. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Dart, everything is an object, including classes. Declaring a class is similar to other OOP languages. The interesting part is you can use named constructors. Dart does not support function overloading, so to overload the constructor you create "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"named constructors"}]},{"type":"text","value":". The most simple example is creating an instance of the class from a JSON file. Lets say we have a user class, so it has a constructor like this:"}]},{"type":"element","tag":"code","props":{"code":"class User() {\r\n    final String username;\r\n    final String firstname;\r\n    \r\n    User(this.username, this.firstname);\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class User() {\r\n    final String username;\r\n    final String firstname;\r\n    \r\n    User(this.username, this.firstname);\r\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to create a user object from JSON, we can add the following constructor:"}]},{"type":"element","tag":"code","props":{"code":"...\r\nUser.fromJSON(String jsonString){\r\n    ...\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"...\r\nUser.fromJSON(String jsonString){\r\n    ...\r\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Like other OOP languages there is inheritance. You can inherit from only one parent class with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"extends"}]},{"type":"text","value":" keyword. As you might already know, through inheritance, the class gets all functions and class variables from the parent class."}]},{"type":"element","tag":"code","props":{"code":"class Human() {\r\n    final bool _mortal = true;\r\n    bool isMortal() {\r\n        return _mortal;\r\n    }\r\n}\r\n\r\nclass Socrates extends Human {\r\n    ...\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Human() {\r\n    final bool _mortal = true;\r\n    bool isMortal() {\r\n        return _mortal;\r\n    }\r\n}\r\n\r\nclass Socrates extends Human {\r\n    ...\r\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Additionally, there are interfaces like C# and Java, but these are implicit. There is no keyword to define an interface directly, so you must create an interface with classes. Via the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"implements"}]},{"type":"text","value":" keyword you can add one or more interfaces to a child class. Whenever you implement an interface, you have to implement all the methods of the parent interface."}]},{"type":"element","tag":"code","props":{"code":"class Person() {\r\n    final String _name;\r\n    \r\n    Person(this._name);\r\n    String greet(String who) => 'Hello, $who. I am $_name.';\r\n}\r\n\r\nclass Impostor implements Person {\r\n    String get _name => '';\r\n\r\n    String greet(String who) => 'Hi $who. Do you know who I am?';\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Person() {\r\n    final String _name;\r\n    \r\n    Person(this._name);\r\n    String greet(String who) => 'Hello, $who. I am $_name.';\r\n}\r\n\r\nclass Impostor implements Person {\r\n    String get _name => '';\r\n\r\n    String greet(String who) => 'Hi $who. Do you know who I am?';\r\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Furthermore, there are mixins in Dart. Mixins are also classes without any constructors. They only tie related functions together. Mixins are used when different types of classes share the same code. To avoid repeating yourself, you separate the shared code block into a mixin. Then you bind the mixin using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"with"}]},{"type":"text","value":" keyword to the related classes. Unlike the other two, mixins are not hierarchical."}]},{"type":"element","tag":"h3","props":{"id":"flutter-basics"},"children":[{"type":"text","value":"Flutter Basics"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter is a mobile app SDK for building high-performance, high-fidelity apps for iOS and Android from a single code base using the Dart programming language. Like Dart, Flutter is also developed and maintained by Google. With Flutter you can develop high-quality native interfaces for iOS, Android, Web and Desktop rapidly. Again as like as Dart, Flutter is free and open source, and it has a big developer community behind it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter is a very fast SDK, compared to the other Cross-Platform frameworks. This is achieved by compiling to the native languages and owning the screen. If you own the screen, it means that everything you build with Flutter is displayed on-screen by "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Skia"}]},{"type":"text","value":", Flutter's graphic engine. So you don't need to call native widgets and wait for them to show up or use a bridge."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter looks beautiful thanks to its pre-designed Cupertino and Material Design themes and widgets. Everything is compatible with the selected look. It is possible for you to manipulate or completely change the look and feel of your app."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When we look at the development experience, Flutter is very productive thanks to its hot reload feature. When you are developing you don't need to compile the whole app when you make a small change, because Flutter detects it and reloads the changed field thanks to it's multi-tree widget rendering mechanics."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now that we know a few things about Flutter, let's examine how it works."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Everything in Flutter is a widget. You build a whole app from widgets. Basically there are 2 types of widget, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"stateless"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"stateful"}]},{"type":"text","value":". "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"A small insider tip here, even the stateless widget is inherited from the stateful widget"}]},{"type":"text","value":". Also there is a third type of widget called an "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"inherited"}]},{"type":"text","value":" widget. As I mentioned previously you build the whole app using these 2 widgets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Everything starts with an import statement. While working on a Flutter project everything that Flutter SDK provides comes with one handy import: "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"import 'package:flutter/material.dart';"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With this import statement, we are able to define widgets, and add pre-built widgets to our app."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter's widgets are immutable. So at runtime you can't respond to changes. Stateful widget solves this issue by creating a state class which lives outside of the widget. This state class is mutable so it can respond and react to changes. When a state changes you should alert the app about the change. Flutter traverses through the widget tree in this way and re-builds the changed widgets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When there is no need for a state, you should choose the stateless widget. This is not because of performance, but rather because of code readability."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example stateless widget:"}]}]},{"type":"element","tag":"code","props":{"code":"class name extends StatelessWidget {\r\n  const name({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class name extends StatelessWidget {\r\n  const name({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example stateful widget:"}]}]},{"type":"element","tag":"code","props":{"code":"class name extends StatefulWidget {\r\n  const name({super.key});\r\n\r\n  @override\r\n  State<name> createState() => _nameState();\r\n}\r\n\r\nclass _nameState extends State<name> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class name extends StatefulWidget {\r\n  const name({super.key});\r\n\r\n  @override\r\n  State<name> createState() => _nameState();\r\n}\r\n\r\nclass _nameState extends State<name> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see in these 2 examples, each widget returns a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Container"}]},{"type":"text","value":". A container is a wrapper widget, which is the equivalent of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"div"}]},{"type":"text","value":" tag in HTML. For more information about widgets, you can check out Flutter's official "},{"type":"element","tag":"a","props":{"href":"https://docs.flutter.dev/development/ui/widgets","rel":["nofollow"]},"children":[{"type":"text","value":"widget catalog"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The main widget that we build our app on top of is called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Scaffold"}]},{"type":"text","value":". It is a special widget which gives us a lot of UI options. Essentially, it is a widget that has a solid background. But we can add app bar, app drawer, action button and more other widgets directly to it. It will handle placement, basic animation and show/hide behaviors for us."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The other essential widget that I previously mentioned is the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"AppBar"}]},{"type":"text","value":". With it, you can place a screen title. It hosts the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"AppDrawer"}]},{"type":"text","value":" and any other action buttons you might have. And finally it shows a back button when you open a new screen."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The final widget I want to mention is the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"AppDrawer"}]},{"type":"text","value":". As its name suggests, it is  a side container. This container could act as a navigator for your app or show some extra information about the screen that it is on."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After walking through all of these basics, the only thing that is missing is building an app. There is one part we may want to examine though, that will ease our job while developing, called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Firebase"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"a-little-bit-of-firebase"},"children":[{"type":"text","value":"A Little Bit of Firebase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You might already know Firebase, but I want to mention it a little bit here before we start development. Firebase is also a Google product. It has free and paid tears. From a higher perspective, we could say that Firebase is a Backend as a Service (BaaS). A lot of future applications are possible with it, such as authentication, real-time database, storage, and hosting. We use it to store our data, with the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Firebase Firestore"}]},{"type":"text","value":". Firestore is a cloud "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"NOSQL"}]},{"type":"text","value":" database. With it we can directly store our data on cloud and also directly access data that is newly created, updated or deleted. It solves a lot of problems otherwise we struggle to solve on our own. Additionally we will use the Firebase Authentication service for our apps sign in and sign up futures. With this service we could not only sign up a user with e-mail and password but also with other social platforms and even with mobile phone numbers. Finally with Cloud Messaging service we could create "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Push Notifications"}]},{"type":"text","value":" for our app in the twinkle of an eye."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now that we have discussed all the things I wanted to mention here, let's move on to the development part. What I want to develop with Flutter and Firebase is a Twitter Clone. A clone that has timeline, profile, tagging, hashtags and the core functions that Twitter has. In the next chapter, we'll plan the app, then we will start to develop the Twitter clone app."}]}]},"date":"2022-09-21T00:00:00.000Z","author":"Ümit Kara","slug":"mobile-app-development-with-flutter","image":{"src":"/blogImg/page2/flutterdart.png","alt":"Mobile App Development with Flutter"},"head":{"meta":[{"name":"description","content":"First part of a multi-parted blog post about Dart language and Flutter framework. In this part, we'll talk about Flutter and Dart basics."},{"name":"keywords","content":"flutter, dart, mobile app development, umit kara, umitkara, ümit kara"},{"name":"author","content":"Ümit Kara"},{"name":"robots","content":"index, follow"},{"name":"og:url","content":"https://umitkara.github.io/blog/mobile-app-development-with-flutter"},{"name":"og:type","content":"website"},{"name":"og:title","content":"Mobile App Development with Flutter"},{"name":"og:description","content":"First part of a multi-parted blog post about Dart language and Flutter framework. In this part, we'll talk about Flutter and Dart basics."},{"name":"og:image","content":"https://umitkara.github.io/blogImg/page2/flutterdart.png"},{"name":"twitter:card","content":"summary_large_image"},{"name":"twitter:title","content":"Mobile App Development with Flutter"},{"name":"twitter:description","content":"First part of a multi-parted blog post about Dart language and Flutter framework. In this part, we'll talk about Flutter and Dart basics."},{"name":"twitter:image","content":"https://umitkara.github.io/blogImg/page2/flutterdart.png"}]},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Recently, I was working on web development. I build sites with pure PHP, Python and Django, pure JavaScript, Vue and Nuxt and PHP with Laravel. There are some points I didn't touch for now; like Angular and React or Express and Node. However, I hope to do so in the future. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After all of this, I thought moving into mobile development might be a reasonable move because the two are so closely related. As a starting point, I chose Flutter. Before Flutter, I wrote some basic Android applications in Java. I could dive into Java, but I was curious about Dart, so I began my Flutter journey."}]},{"type":"element","tag":"h2","props":{"id":"first-step-learn-to-play-the-game"},"children":[{"type":"text","value":"First Step: Learn to play the game"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Like every subject, the first thing you want to do is learn the basics. I started to research Dart and Flutter first and tried to find some helpful resources to learn the language and framework. The most comprehensive resource I could find was called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Flutter Complete Reference"}]},{"type":"text","value":" by "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Alberto Miola"}]},{"type":"text","value":" ("},{"type":"element","tag":"a","props":{"href":"https://fluttercompletereference.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Here"}]},{"type":"text","value":" is the link to the site). The book does not only teach you Dart or Flutter, it also mentions the basics of both of them. Also, the writer talks about good practices for writing efficient and clean Dart and Flutter code. In this way you have a vision of how and when to use the given topic in a real situation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now I want to talk about some Dart basics. First, Dart is a very mature language. I worked with lots of languages and I can tell that Dart is not too difficult to learn. It is readable and easy to understand. It is also backed by a large community. When you face an obstacle, there is always help nearby. And it has a very large "},{"type":"element","tag":"a","props":{"href":"https://pub.dev/","rel":["nofollow"]},"children":[{"type":"text","value":"package library"}]},{"type":"text","value":" that you could use. For example I found out a web framework called "},{"type":"element","tag":"a","props":{"href":"https://www.theconduit.dev/","rel":["nofollow"]},"children":[{"type":"text","value":"Conduct"}]},{"type":"text","value":" that I want to try out instead of Python's Flask to develop some web applications."}]},{"type":"element","tag":"h3","props":{"id":"darts-basics"},"children":[{"type":"text","value":"Darts Basics"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dart is developed and maintained by Google. It is intended to replace JavaScript. Therefore, some weaknesses of JavaScript have been eliminated in Dart."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dart is strongly typed like TypeScript, unlike JavaScript. JavaScript's weakly typed feature is both a strength and a weakness at the same time. It is a strength because you don’t have to cast or convert types, however it could cause severe runtime troubles. The Dart team developed the language as strongly typed to prevent developers from running into runtime problems."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As like most other languages Dart has Numbers (integers and double precision floating points), Strings, Booleans, Lists (dynamic arrays), Sets and Maps (Associative array or dictionary)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are several ways to define a variable. As in JavaScript, you can define variables with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" keyword. As in most other strongly typed languages, you can declare a variable by putting "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"<type>"}]},{"type":"text","value":" before the variable name. Moreover you can declare a variable with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"final"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" keywords. Both of these keywords define an unchangeable variable, but in const you should initialize the variable value while declaring it. "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In Dart, everything is an object, including classes. Declaring a class is similar to other OOP languages. The interesting part is you can use named constructors. Dart does not support function overloading, so to overload the constructor you create "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"named constructors"}]},{"type":"text","value":". The most simple example is creating an instance of the class from a JSON file. Lets say we have a user class, so it has a constructor like this:"}]},{"type":"element","tag":"code","props":{"code":"class User() {\r\n    final String username;\r\n    final String firstname;\r\n    \r\n    User(this.username, this.firstname);\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"User"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"() {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" username;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" firstname;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"User"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"this"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":".username, "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"this"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":".firstname);"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to create a user object from JSON, we can add the following constructor:"}]},{"type":"element","tag":"code","props":{"code":"...\r\nUser.fromJSON(String jsonString){\r\n    ...\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"..."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"User"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"fromJSON"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" jsonString){"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    ..."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Like other OOP languages there is inheritance. You can inherit from only one parent class with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"extends"}]},{"type":"text","value":" keyword. As you might already know, through inheritance, the class gets all functions and class variables from the parent class."}]},{"type":"element","tag":"code","props":{"code":"class Human() {\r\n    final bool _mortal = true;\r\n    bool isMortal() {\r\n        return _mortal;\r\n    }\r\n}\r\n\r\nclass Socrates extends Human {\r\n    ...\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Human"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"() {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"bool"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" _mortal "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"true"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"bool"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"isMortal"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"() {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" _mortal;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    }"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Socrates"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"extends"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Human"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    ..."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Additionally, there are interfaces like C# and Java, but these are implicit. There is no keyword to define an interface directly, so you must create an interface with classes. Via the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"implements"}]},{"type":"text","value":" keyword you can add one or more interfaces to a child class. Whenever you implement an interface, you have to implement all the methods of the parent interface."}]},{"type":"element","tag":"code","props":{"code":"class Person() {\r\n    final String _name;\r\n    \r\n    Person(this._name);\r\n    String greet(String who) => 'Hello, $who. I am $_name.';\r\n}\r\n\r\nclass Impostor implements Person {\r\n    String get _name => '';\r\n\r\n    String greet(String who) => 'Hi $who. Do you know who I am?';\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Person"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"() {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" _name;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Person"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"this"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"._name);"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"greet"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" who) "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"=>"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-db4b25"},"children":[{"type":"text","value":"'Hello, $"}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"who"}]},{"type":"element","tag":"span","props":{"class":"ct-db4b25"},"children":[{"type":"text","value":". I am $"}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"_name"}]},{"type":"element","tag":"span","props":{"class":"ct-db4b25"},"children":[{"type":"text","value":".'"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Impostor"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"implements"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Person"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"get"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"_name"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" => "}]},{"type":"element","tag":"span","props":{"class":"ct-db4b25"},"children":[{"type":"text","value":"''"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"greet"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" who) "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"=>"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-db4b25"},"children":[{"type":"text","value":"'Hi $"}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"who"}]},{"type":"element","tag":"span","props":{"class":"ct-db4b25"},"children":[{"type":"text","value":". Do you know who I am?'"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Furthermore, there are mixins in Dart. Mixins are also classes without any constructors. They only tie related functions together. Mixins are used when different types of classes share the same code. To avoid repeating yourself, you separate the shared code block into a mixin. Then you bind the mixin using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"with"}]},{"type":"text","value":" keyword to the related classes. Unlike the other two, mixins are not hierarchical."}]},{"type":"element","tag":"h3","props":{"id":"flutter-basics"},"children":[{"type":"text","value":"Flutter Basics"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter is a mobile app SDK for building high-performance, high-fidelity apps for iOS and Android from a single code base using the Dart programming language. Like Dart, Flutter is also developed and maintained by Google. With Flutter you can develop high-quality native interfaces for iOS, Android, Web and Desktop rapidly. Again as like as Dart, Flutter is free and open source, and it has a big developer community behind it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter is a very fast SDK, compared to the other Cross-Platform frameworks. This is achieved by compiling to the native languages and owning the screen. If you own the screen, it means that everything you build with Flutter is displayed on-screen by "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Skia"}]},{"type":"text","value":", Flutter's graphic engine. So you don't need to call native widgets and wait for them to show up or use a bridge."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter looks beautiful thanks to its pre-designed Cupertino and Material Design themes and widgets. Everything is compatible with the selected look. It is possible for you to manipulate or completely change the look and feel of your app."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When we look at the development experience, Flutter is very productive thanks to its hot reload feature. When you are developing you don't need to compile the whole app when you make a small change, because Flutter detects it and reloads the changed field thanks to it's multi-tree widget rendering mechanics."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now that we know a few things about Flutter, let's examine how it works."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Everything in Flutter is a widget. You build a whole app from widgets. Basically there are 2 types of widget, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"stateless"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"stateful"}]},{"type":"text","value":". "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"A small insider tip here, even the stateless widget is inherited from the stateful widget"}]},{"type":"text","value":". Also there is a third type of widget called an "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"inherited"}]},{"type":"text","value":" widget. As I mentioned previously you build the whole app using these 2 widgets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Everything starts with an import statement. While working on a Flutter project everything that Flutter SDK provides comes with one handy import: "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"import 'package:flutter/material.dart';"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With this import statement, we are able to define widgets, and add pre-built widgets to our app."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Flutter's widgets are immutable. So at runtime you can't respond to changes. Stateful widget solves this issue by creating a state class which lives outside of the widget. This state class is mutable so it can respond and react to changes. When a state changes you should alert the app about the change. Flutter traverses through the widget tree in this way and re-builds the changed widgets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When there is no need for a state, you should choose the stateless widget. This is not because of performance, but rather because of code readability."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example stateless widget:"}]}]},{"type":"element","tag":"code","props":{"code":"class name extends StatelessWidget {\r\n  const name({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" name "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"extends"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"StatelessWidget"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"name"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"({"}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"super"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":".key});"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"@override"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Widget"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"build"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"BuildContext"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" context) {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Container"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"();"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  }"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Example stateful widget:"}]}]},{"type":"element","tag":"code","props":{"code":"class name extends StatefulWidget {\r\n  const name({super.key});\r\n\r\n  @override\r\n  State<name> createState() => _nameState();\r\n}\r\n\r\nclass _nameState extends State<name> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\n","language":"dart"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" name "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"extends"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"StatefulWidget"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"name"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"({"}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"super"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":".key});"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"@override"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"State"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"<name> "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"createState"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"() "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"=>"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"_nameState"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"();"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" _nameState "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"extends"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"State"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"<name> {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"@override"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Widget"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e43f7"},"children":[{"type":"text","value":"build"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"BuildContext"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" context) {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-9e82f5"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-7842a8"},"children":[{"type":"text","value":"Container"}]},{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"();"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"  }"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-deab13"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see in these 2 examples, each widget returns a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Container"}]},{"type":"text","value":". A container is a wrapper widget, which is the equivalent of the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"div"}]},{"type":"text","value":" tag in HTML. For more information about widgets, you can check out Flutter's official "},{"type":"element","tag":"a","props":{"href":"https://docs.flutter.dev/development/ui/widgets","rel":["nofollow"]},"children":[{"type":"text","value":"widget catalog"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The main widget that we build our app on top of is called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Scaffold"}]},{"type":"text","value":". It is a special widget which gives us a lot of UI options. Essentially, it is a widget that has a solid background. But we can add app bar, app drawer, action button and more other widgets directly to it. It will handle placement, basic animation and show/hide behaviors for us."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The other essential widget that I previously mentioned is the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"AppBar"}]},{"type":"text","value":". With it, you can place a screen title. It hosts the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"AppDrawer"}]},{"type":"text","value":" and any other action buttons you might have. And finally it shows a back button when you open a new screen."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The final widget I want to mention is the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"AppDrawer"}]},{"type":"text","value":". As its name suggests, it is  a side container. This container could act as a navigator for your app or show some extra information about the screen that it is on."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After walking through all of these basics, the only thing that is missing is building an app. There is one part we may want to examine though, that will ease our job while developing, called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Firebase"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"a-little-bit-of-firebase"},"children":[{"type":"text","value":"A Little Bit of Firebase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You might already know Firebase, but I want to mention it a little bit here before we start development. Firebase is also a Google product. It has free and paid tears. From a higher perspective, we could say that Firebase is a Backend as a Service (BaaS). A lot of future applications are possible with it, such as authentication, real-time database, storage, and hosting. We use it to store our data, with the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Firebase Firestore"}]},{"type":"text","value":". Firestore is a cloud "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"NOSQL"}]},{"type":"text","value":" database. With it we can directly store our data on cloud and also directly access data that is newly created, updated or deleted. It solves a lot of problems otherwise we struggle to solve on our own. Additionally we will use the Firebase Authentication service for our apps sign in and sign up futures. With this service we could not only sign up a user with e-mail and password but also with other social platforms and even with mobile phone numbers. Finally with Cloud Messaging service we could create "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Push Notifications"}]},{"type":"text","value":" for our app in the twinkle of an eye."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now that we have discussed all the things I wanted to mention here, let's move on to the development part. What I want to develop with Flutter and Firebase is a Twitter Clone. A clone that has timeline, profile, tagging, hashtags and the core functions that Twitter has. In the next chapter, we'll plan the app, then we will start to develop the Twitter clone app."}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-db4b25{color:#0A3069}.ct-6e43f7{color:#8250DF}.ct-7842a8{color:#0550AE}.ct-deab13{color:#24292F}.ct-9e82f5{color:#CF222E}.dark .ct-9e82f5{color:#FF7B72}.dark .ct-deab13{color:#C9D1D9}.dark .ct-7842a8{color:#79C0FF}.dark .ct-6e43f7{color:#D2A8FF}.dark .ct-db4b25{color:#A5D6FF}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"first-step-learn-to-play-the-game","depth":2,"text":"First Step: Learn to play the game","children":[{"id":"darts-basics","depth":3,"text":"Darts Basics"},{"id":"flutter-basics","depth":3,"text":"Flutter Basics"},{"id":"a-little-bit-of-firebase","depth":3,"text":"A Little Bit of Firebase"}]}]}},"_type":"markdown","_id":"content:page2.md","_source":"content","_file":"page2.md","_extension":"md"}